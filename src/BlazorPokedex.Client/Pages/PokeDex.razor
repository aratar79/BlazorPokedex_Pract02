@page "/"

@inject IPokeApiClient PokeApiClient

<h3 style="text-align: center;">PokeDex</h3>

<div>
    <div class="row">
        <div class="col">
            <Pagination MetaDada="paginationMetadata" Spread="5" SelectedPage="SelectedPage"></Pagination>
        </div>
    </div>
    <PokemonGrid Pokemons="Pokemons" NumberOfRows="10"></PokemonGrid>
</div>

@code {

    public IEnumerable<Pokemon> Pokemons { get; set; }

    PaginationMetaData paginationMetadata = new PaginationMetaData();
    PaginationParameters paginationParameters = new PaginationParameters();

    protected override async Task OnInitializedAsync()
    {
        var result = await PokeApiClient.GetAllPokemons(paginationParameters);
        var pokemons = new List<Pokemon>();

        paginationMetadata.CurrentPage = 1;

        foreach (var poke in result.Pokemons)
            pokemons.Add(await PokeApiClient.GetPokemon(poke.Name));

        Pokemons = pokemons;

        paginationMetadata.TotalCount = result.Count;
        paginationMetadata.TotalPages = paginationMetadata.TotalCount / paginationParameters.PageSize;
    }

    private async Task SelectedPage(int page)
    {
        paginationParameters.PageNumber = page;
        await GetPokemons();
    }

    private async Task GetPokemons()
    {
        var result = await PokeApiClient.GetAllPokemons(paginationParameters);
        var pokemons = new List<Pokemon>();

        foreach (var poke in result.Pokemons)
            pokemons.Add(await PokeApiClient.GetPokemon(poke.Name));
        Pokemons = pokemons;
    }
}
